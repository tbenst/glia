{"id":"B5DX","dependencies":[{"name":"/home/tyler/code/dura/glia/receptive_field/package.json","includedInParent":true,"mtime":1604287136802}],"generated":{"js":"\"use strict\";exports.boolConj=function(n){return function(o){return n&&o}},exports.boolDisj=function(n){return function(o){return n||o}},exports.boolNot=function(n){return!n};"},"sourceMaps":{"js":{"mappings":[{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"exports","original":{"line":3,"column":0},"generated":{"line":1,"column":13}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"boolConj","original":{"line":3,"column":8},"generated":{"line":1,"column":21}},{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":3,"column":19},"generated":{"line":1,"column":30}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b1","original":{"line":3,"column":29},"generated":{"line":1,"column":39}},{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":4,"column":9},"generated":{"line":1,"column":42}},{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":4,"column":9},"generated":{"line":1,"column":49}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b2","original":{"line":4,"column":19},"generated":{"line":1,"column":58}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b1","original":{"line":5,"column":11},"generated":{"line":1,"column":61}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b1","original":{"line":5,"column":11},"generated":{"line":1,"column":68}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b2","original":{"line":5,"column":17},"generated":{"line":1,"column":71}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"exports","original":{"line":9,"column":0},"generated":{"line":1,"column":75}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"boolDisj","original":{"line":9,"column":8},"generated":{"line":1,"column":83}},{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":9,"column":19},"generated":{"line":1,"column":92}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b1","original":{"line":9,"column":29},"generated":{"line":1,"column":101}},{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":10,"column":9},"generated":{"line":1,"column":104}},{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":10,"column":9},"generated":{"line":1,"column":111}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b2","original":{"line":10,"column":19},"generated":{"line":1,"column":120}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b1","original":{"line":11,"column":11},"generated":{"line":1,"column":123}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b1","original":{"line":11,"column":11},"generated":{"line":1,"column":130}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b2","original":{"line":11,"column":17},"generated":{"line":1,"column":133}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"exports","original":{"line":15,"column":0},"generated":{"line":1,"column":137}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"boolNot","original":{"line":15,"column":8},"generated":{"line":1,"column":145}},{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":15,"column":18},"generated":{"line":1,"column":153}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b","original":{"line":15,"column":28},"generated":{"line":1,"column":162}},{"source":"../output/Data.HeytingAlgebra/foreign.js","original":{"line":16,"column":9},"generated":{"line":1,"column":165}},{"source":"../output/Data.HeytingAlgebra/foreign.js","name":"b","original":{"line":16,"column":10},"generated":{"line":1,"column":172}}],"sources":{"../output/Data.HeytingAlgebra/foreign.js":"\"use strict\";\n\nexports.boolConj = function (b1) {\n  return function (b2) {\n    return b1 && b2;\n  };\n};\n\nexports.boolDisj = function (b1) {\n  return function (b2) {\n    return b1 || b2;\n  };\n};\n\nexports.boolNot = function (b) {\n  return !b;\n};\n"},"lineCount":null}},"error":null,"hash":"df78aaeb02db12ea5bdffdcc36e6d4a1","cacheData":{"env":{}}}